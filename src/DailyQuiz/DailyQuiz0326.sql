CREATE TABLE PRODUCT (
    PRODUCT_ID INTEGER PRIMARY KEY,
    PRODUCT_CODE VARCHAR(8) NOT NULL,
    PRICE INTEGER NOT NULL    
);

CREATE TABLE OFFLINE_SALE (
    OFFLINE_SALE_ID INTEGER PRIMARY KEY,
    PRODUCT_ID INTEGER NOT NULL,
    SALES_AMOUNT INTEGER NOT NULL,
    SALES_DATE DATE NOT NULL    
);

INSERT INTO PRODUCT (PRODUCT_ID, PRODUCT_CODE, PRICE) VALUES 
(1, 'A1000011', 15000),
(2, 'A1000045', 8000),
(3, 'C3000002', 42000);

INSERT INTO OFFLINE_SALE (OFFLINE_SALE_ID, PRODUCT_ID, SALES_AMOUNT, SALES_DATE) VALUES 
(1, 1, 2, '2024-02-21'),
(2, 1, 2, '2024-03-02'),
(3, 3, 3, '2024-05-01'),
(4, 2, 1, '2024-05-24'),
(5, 1, 2, '2024-06-14'),
(6, 2, 1, '2024-06-22');

-- 상품 별 오프라인 매출 구하기
SELECT 
    P.PRODUCT_CODE, 
    SUM(P.PRICE * O.SALES_AMOUNT) AS TOTAL_SALES
FROM PRODUCT P
INNER JOIN OFFLINE_SALE O ON P.PRODUCT_ID = O.PRODUCT_ID
GROUP BY P.PRODUCT_CODE
ORDER BY TOTAL_SALES DESC, P.PRODUCT_CODE ASC;

-- 아래 PRODUCT 테이블과 OFFLINE_SALE 테이블 PRODUCT_ID 기준으로 교집합 row를 출력해주세요.
SELECT *
FROM PRODUCT P
INNER JOIN OFFLINE_SALE O ON P.PRODUCT_ID = O.PRODUCT_ID;